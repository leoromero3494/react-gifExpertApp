{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","console","log","cats","type","value","onChange","target","getGifs","a","category","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAoB9C,OACI,0BAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BC,QAAQC,IAAIR,GACZF,GAAe,SAAAW,GAAI,OAAMT,GAAN,mBAAqBS,OAExCR,EAAc,OAOd,2BACIS,KAAK,OACLC,MAAQX,EACRY,SArBc,SAAET,GACxBF,EAAeE,EAAEU,OAAOF,Y,uBCRnBG,EAAO,uCAAE,kDAAAC,EAAA,6DAAOC,EAAP,+BAAgB,WAE5BC,EAFY,2DAE+CC,UAAWF,GAF1D,sDAGMG,MAAOF,GAHb,cAGZG,EAHY,gBAIKA,EAAUC,OAJf,uBAIVC,EAJU,EAIVA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVxB,kBAcXM,GAdW,4CAAF,qDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACrC,OACI,yBAAKc,UAAU,yCACX,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,+BAAMA,EAAN,OCFCO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECDT,SAAEA,GAC9BT,QAAQC,IAAIQ,GADgC,MAEdjB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAuBxC,OAhBAC,qBAAW,WAEPxB,EAASE,GACJuB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACnB,IAKGoB,EDrBqBK,CAAazB,GAAjCY,EADyB,EAC/BN,KAAca,EADiB,EACjBA,QAEtB,OACE,oCACE,wBAAIJ,UAAU,oCAAd,IAAmDf,EAAnD,KAECmB,GAAW,uBAAGJ,UAAU,oCAAb,WAEZ,yBAAKA,UAAU,aACZH,EAAOJ,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,UEV3BkB,EAAe,WAAM,MAGQ5C,mBAAS,CAAC,cAHlB,mBAGrB6C,EAHqB,KAGT9C,EAHS,KAU9B,OANJS,QAAQC,IAAIoC,GAOJ,6BACI,4CACA,kBAAC,EAAD,CAAa9C,cAAiBA,IAC9B,6BAIA,4BAEQ8C,EAAWpB,KAAK,SAACR,EAAU6B,GAAX,OACZ,kBAAC,EAAD,CACIH,IAAM1B,EACNA,SAAWA,U,MCvBvC8B,IAASC,OAEL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.5c4d01e0.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState(''); // ''\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n      \r\n        if ( inputValue.trim().length > 2 ) {\r\n            console.log(inputValue);\r\n            setCategories( cats => [ inputValue, ...cats, ] );\r\n           \r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs =async( category='OnePunch' ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit+=10&q=${ encodeURI( category ) }&api_key=dOUH3SJpjQvp1ZrGqFsnhiz1fp47Jk0M`;\r\n    const respuesta = await fetch( url );\r\n    const { data } = await respuesta.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__flash\">\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className='animate__animated animate__flash'> {category} </h3>\r\n\r\n      {loading && <p className='animate__animated animate__flash'>Loading</p>}\r\n\r\n      <div className='card-grid'>\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n    export const useFetchGifs = ( category ) => {\r\n    console.log(category);\r\n        const [state, setState] = useState({\r\n            data: [],\r\n            loading: true\r\n        });\r\n    \r\n        useEffect( () => {\r\n    \r\n            getGifs( category )\r\n                .then( imgs => {\r\n                    \r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                })\r\n    \r\n        }, [category])\r\n    \r\n    \r\n    \r\n    \r\n        return state; // { data:[], loading: true };\r\n    \r\n    \r\n    }\r\n\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport PropTypes from 'prop-types';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n   // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n      const [categories, setCategories] = useState(['One Punch']);\r\nconsole.log(categories);\r\n    //   const handleAdd = () => {\r\n    //      // setCategories( [ 'HunterXHunter', ...categories ] );\r\n    //      setCategories( cats => [ ...cats, 'HunterXHunter' ] );\r\n    //   }\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories= { setCategories }/>    \r\n            <hr/>\r\n\r\n          \r\n\r\n            <ol>\r\n                {\r\n                    categories.map( (category, i) =>\r\n                        <GifGrid\r\n                            key={ category }\r\n                            category={ category }\r\n                        ></GifGrid>\r\n                     \r\n               )}\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from  './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n\n// GifExpertApp\n// <h2>GifExpertApp</h2>\n// <hr/>"],"sourceRoot":""}